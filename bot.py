import telebot
import random
import time
import sqlite3 as sql


bot = telebot.TeleBot(TOKEN)

'''
con = sql.connect('Data/Matanove.db')
cur = con.cursor()
cur.execute("CREATE TABLE IF NOT EXISTS `identify` (`name` STRING, `surname` STRING, `user_id` INTEGER)")
cur.execute("CREATE TABLE IF NOT EXISTS `stat` (`qty` INTEGER, `user_id` INTEGER, `intel` INTEGER DEFAULT 0)")
con.commit()
cur.close()

path = ""
isSolving = False
rightAnswer = 0
level = 0
tm = 0
isAdd = False
add_level = 0
add_ans = 0
add_lvls_list = [0, 0, 0, 0]
PrevHelloMessageId = 101437  # —Ä–∞–Ω–¥–æ–º–Ω—ñ —Ü–∏—Ñ—Ä–∏, –Ω–æ–º–µ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
NewHelloMessageId = 101438  # message_id
helloText = """–í—ñ—Ç–∞—é –≤ @matan_help ‚úã
–ì–æ–ª–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç—É:
‚û°Ô∏è–ù–µ –æ–±—Ä–∞–∂–∞—Ç–∏ —ñ–Ω—à–∏—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤
‚û°Ô∏è–î–æ–ø–æ–º–∞–≥–∞—Ç–∏ —ñ–Ω—à–∏–º —É—á–∞—Å–Ω–∏–∫–∞–º, —è–∫—â–æ –º–∞—î—Ç–µ –∑–º–æ–≥—É
‚û°Ô∏è–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ—Å—ñ—Ç—å
‚û°Ô∏è–ó–∞ —Ä–µ–∫–ª–∞–º—É —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫ - –±–∞–Ωüö´
/help - –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
–ë–∞–∂–∞—î–º–æ –≤–∞–º 200 –±–∞–ª—ñ–≤ –Ω–∞ –ó–ù–û!"""
helpText = """ /report - –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ø–æ—Ä—É—à–µ–Ω–Ω—è
/question - —è–∫—â–æ –≤–∏–Ω–∏–∫–ª–æ –ø–∏—Ç–∞–Ω–Ω—è
/task - —Ä–æ–∑–≤'—è–∑—É–π—Ç–µ –∑–∞–¥–∞—á—ñ, —Å—Ç–∞–Ω—å –ø–µ—Ä—à–∏–º –≤ —Ä–µ–π—Ç–∏–Ω–≥—É
/stat - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç—É"""


def pts():
    tm1 = int(time.time()) - int(tm)
    return round(
        pow(2, (level - 1) / 2.0) * pow(3, float(level) - float(tm1 / (120.0 * pow(10, float(level + 2) / 3.0)))))


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–∞–≥–∞—é –≤ –≥—Ä—É–ø—ñ  @matan_help')


# –∫–æ–º–∞–Ω–¥–∏
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, helpText)


@bot.message_handler(commands=['report'])
def report_message(message):
    bot.reply_to(message, '@mataner @andead422 @dimaborak @Gazelka @nporMaTeR @melkii_pumba')
    if message.chat.type == 'supergroup':
        bot.send_message(-1001418192939, '–†–æ–∑–±—ñ–π–Ω–∏–∫ –≤ @matan_help')


@bot.message_handler(commands=['question'])
def question_message(message):
    bot.reply_to(message, '@mataner @andead422 @dimaborak @Gazelka @nporMaTeR @melkii_pumba')
    if message.chat.type == 'supergroup':
        bot.send_message(-1001418192939, '–Ñ –ø–∏—Ç–∞–Ω–Ω—è –≤ @matan_help')


@bot.message_handler(commands=['task'])
def task_text(message):
    global isSolving
    global rightAnswer
    global path
    global level
    global tm
    tm1 = time.time()
    if int(tm1) - int(tm) > 1200:
        isSolving = False
    try:
        tester = message.text[6]
    except:
        bot.reply_to(message,
                     '–í–∫–∞–∑–∞–Ω—ñ –Ω–µ–≤—ñ—Ä–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏. –ê—Ä–≥—É–º–µ–Ω—Ç–æ–º –º–æ–∂–µ —Å–ª—É–≥—É–≤–∞—Ç–∏ –ª–∏—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 4 –≤–∫–ª—é—á–Ω–æ, –¥–µ —á–∏—Å–ª–æ –ø–æ–∑–Ω–∞—á–∞—î —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è')
        return 0
    if not isSolving and (
            message.text[6] == '1' or message.text[6] == '2' or message.text[6] == '3' or message.text[6] == '4'):
        listQ = open("Data/Tasks/q.txt", 'r')
        quantity = 0
        counter = 0
        for line in listQ:
            counter += 1
            if counter == int(message.text[6]):
                level = int(message.text[6])
                quantity = int(line)
        a = random.randint(1, quantity)
        path = r"Data/Tasks/Questions/" + message.text[6] + "/" + str(a) + ".png"
        file = open(path, 'rb')
        bot.send_photo(message.chat.id, file,
                       caption='–í—ñ–¥–ø–æ–≤—ñ–¥–¥—é —î —á–∏—Å–ª–æ –≤ –¥–µ—Å—è—Ç–∫–æ–≤–æ–º—É –∑–∞–ø–∏—Å—ñ. –ì–∞—Ä–∞–Ω—Ç—É—î—Ç—å—Å—è, —â–æ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏—Ö –¥–µ—Å—è—Ç–∫–æ–≤–∏—Ö –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–∏—Ö –¥—Ä–æ–±—ñ–≤ –Ω–µ–º–∞—î.\n–†—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ: ' + str(
                           level) + '\n–ü—Ä–∏–∫–ª–∞–¥: 16; -38,8; 0; 44.268. \n–¢–µ—Ä–º—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–Ω—è - ' + str(
                           level * 10) + ' —Ö–≤–∏–ª–∏–Ω')
        isSolving = True
        path2 = "Data/Tasks/Solutions/" + str(level) + "/sol.txt"
        counter = 0
        sol = open(path2, 'r')
        for line in sol:
            counter += 1
            if counter == a:
                rightAnswer = line
        file.close()
        sol.close()
        listQ.close()
        tm = time.time()
    elif isSolving:
        file = open(path, 'rb')
        bot.send_photo(message.chat.id, file, caption=r"–°–ø–æ—á–∞—Ç–∫—É —Ä–æ–∑–≤'—è–∂—ñ—Ç—å –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω—É –∑–∞–¥–∞—á—É!")
    else:
        bot.reply_to(message,
                     '–í–∫–∞–∑–∞–Ω—ñ –Ω–µ–≤—ñ—Ä–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏. –ê—Ä–≥—É–º–µ–Ω—Ç–æ–º –º–æ–∂–µ —Å–ª—É–≥—É–≤–∞—Ç–∏ –ª–∏—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 4 –≤–∫–ª—é—á–Ω–æ, –¥–µ —á–∏—Å–ª–æ –ø–æ–∑–Ω–∞—á–∞—î —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è')
        return 0


@bot.message_handler(commands=['add'])
def add_command(message):
    global add_level
    global add_ans
    global isAdd
    if int(message.chat.id) != -1001382702607:
        bot.reply_to(message, '–ù–∞ –∂–∞–ª—å, –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ –±–æ—Ç—É')
        return 0
    try:
        add_level = int(message.text[5])
        add_ans = message.text[7]
        add_ans = float(message.text[7:].replace(',', '.'))
        isAdd = True
    except:
        bot.reply_to(message, '–ù–µ–≤—ñ—Ä–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏')
        return 0
    f = open('Data/Tasks/q.txt', 'r')
    counter = 0
    for line in f:
        add_lvls_list[counter] = int(line)
        counter += 1
    add_lvls_list[add_level - 1] += 1
    f.close()
    bot.reply_to(message, '–û–∂–∏–¥–∞—é —Ñ–æ—Ç–æ...')


@bot.message_handler(content_types=[""'video_note', 'voice', 'sticker', 'audio', 'document', 'photo', 'text',
                                    'video', 'location', 'contact', 'new_chat_members', 'left_chat_member'""])
def sorting(message):
    count_msg(message)
    if message.content_type == 'new_chat_members':
        hello_message(message)
    elif message.content_type == 'text':
        send_text(message)
    elif message.content_type == 'photo':
        handle_docs_photo(message)
    else:
        pass


# –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ –≥—Ä—É–ø–∏ –∑–∞–π—à–æ–≤ –≤ —á–∞—Ç
def hello_message(message):
    bot.reply_to(message, helloText)
    global PrevHelloMessageId
    global NewHelloMessageId
    PrevHelloMessageId = int(NewHelloMessageId)
    NewHelloMessageId = int(message.message_id) + 1
    bot.delete_message(message.chat.id, PrevHelloMessageId)


def send_text(message):
    global isSolving
    tm1 = time.time()
    txt = message.text
    txt = txt.replace(',', '.')
    if int(tm1) - int(tm) > 1200:
        isSolving = False
    try:
        float(txt)
        isVal = True
    except ValueError:
        isVal = False
    # print(message.text)
    if isVal:
        if isSolving and float(txt) == float(rightAnswer):
            bot.reply_to(message, '*–í—ñ—Ç–∞—î–º–æ!* _–í–∏ –ø–µ—Ä—à–∏–º —Ä–æ–∑–≤\'—è–∑–∞–ª–∏ –∑–∞–¥–∞—á—É —Ä—ñ–≤–Ω—è ' + str(level) + ' –∑–∞ ' + str(
                int(tm1) - int(tm)) + ' —Å, —ñ –æ—Ç—Ä–∏–º—É—î—Ç–µ _*+' + str(pts()) + '*_ –¥–æ –í–∞—à–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥—É_',
                         parse_mode="Markdown")
            isSolving = False
            intelligence(message, pts())


def handle_docs_photo(message):
    global isAdd
    if isAdd and message.chat.id == -1001382702607:
        try:
            file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = "Data/Tasks/Questions/" + str(add_level) + "/" + str(add_lvls_list[add_level - 1]) + ".png"
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
                bot.reply_to(message, "Ok!")
            f = open("Data/Tasks/q.txt", 'w')
            for i in add_lvls_list:
                f.write(str(i) + '\n')
            f.close()
            f = open("Data/Tasks/Solutions/" + str(add_level) + "/sol.txt", 'a')
            f.write('\n' + str(add_ans))
        except Exception as e:
            bot.reply_to(message, e)


def count_msg(message):
    con_sql = sql.connect('Data/Matanove.db')
    cur_sql = con_sql.cursor()
    name = (message.from_user.first_name, "")[str(message.from_user.first_name) == "None"]
    surname = (message.from_user.last_name, "")[str(message.from_user.last_name) == "None"]
    user_id = message.from_user.id
    # print(f"{message.from_user.username} posted '{message.content_type}' content")
    cur_sql.execute(f"SELECT `user_id` FROM `identify` WHERE `user_id` = '{user_id}'")
    user_id_list = cur_sql.fetchall()
    # print(user_id)
    if len(user_id_list) == 1:
        # print(user_id, "    1")
        cur_sql.execute(f"UPDATE `stat` SET `qty` = `qty` + 1 WHERE `user_id` = '{user_id}'")
    else:
        # print(user_id, "    2")
        cur_sql.execute(f"INSERT INTO `identify` VALUES ('{name}', '{surname}', '{user_id}')")
        cur_sql.execute(f"INSERT INTO `stat` (`qty`, `user_id`) VALUES (1, '{user_id}')")
    con_sql.commit()
    cur_sql.close()


def intelligence(message, intel):
    # print(intel)
    con_sql = sql.connect('Data/Matanove.db')
    cur_sql = con_sql.cursor()
    user_id = message.from_user.id
    query = "UPDATE `stat` SET `intel` = `intel` + {} WHERE `user_id` = '{}'".format(intel, user_id)
    # print(query)
    cur_sql.execute(query)
    con_sql.commit()
    cur_sql.close()

'''
bot.infinity_polling()
